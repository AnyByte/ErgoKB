@startuml "Весь алгоритм"
skinparam monochrome true
skinparam wrapWidth 250
skinparam defaultTextAlignment center
skinparam defaultFontSize 14
skinparam noteFontSize 14
start
:Исходная раскладка "ЙЦУКЕН";
repeat:Получение раскладки на вход алгоритма;
partition "Алгоритм производных раскладок" {
    :Сгенерировать случайное число X в интервале [1;3];
    if (X == 1) then (Да)
        :Сгенерировать случайное число Y в интервале [1;12];
        :Циклично сдвинуть Y колонку и получить все возможные варианты раскладок;
    else (Нет)
    endif
    if (X == 2) then (Да)
        :Сгенерировать случайное число Y в интервале [1;3];
        :Циклично сдвинуть Y ряд на левой половине раскладки и получить все возможные варианты раскладок;
    else (Нет)
    endif
    if (X == 3) then (Да)
        :Сгенерировать случайное число Y в интервале [1;3];
        :Циклично сдвинуть Y ряд на правой половине раскладки и получить все возможные варианты раскладок;
    else (Нет)
    endif
}
partition "Алгоритм оптимизации" {
    :Выбор раскладки с наилучшим целевым параметром Score;
    if (Целевое значение Score у раскладки меньше минимального) then (Нет)
        :Количество итераций, где целевое значение Score больше минимального + 1;
    else (Да)
        :Обновить минимальное значение;
        :Количество итераций, где целевое значение Score больше минимального := 0;
    endif 
    if (Количество итераций, где целевое значение Score больше минимального ≥ 10) then (Да)
        :Выбор случайной раскладки из пройденных итераций;
    else (Нет)
    endif
    note right
        Если мы получили 10 итераций подряд, где целевое значение Score не опускается ниже минального, выбираем для подачи на вход алгоритма случайную из ранее полученных раскладок.
    end note
    if (Количество итераций, где целевое значение Score больше минимального ≥ 100) then (Да)
        :Выбор случайной раскладки из пройденных итераций, у которой Score равняется минимальному значению;
    else (Нет)
    endif
    note right
        Если мы получили 100 итераций подряд, где целевое значение Score не опускается ниже минального, выбираем для подачи на вход алгоритма случайную из ранее полученных раскладок, где Score равен минимальному значению.
    end note
    if (Количество итераций, где целевое значение Score больше минимального ≥ 300\nи\nScore ≤ минимальное значение) then (Да)
        :**Условие завершение алогоритма выполнено**
        //Полученная раскладка является близкой к оптимальной//;
    else (Нет)
    endif
    note right
        Если мы получили 300 итераций подряд, где целевое значение Score не опускается ниже минального, предполагаем, что алгоритм не способен найти более оптимальную раскладку — следовательно завершаем работу алгоритма оптимизации.
    end note
}
repeat while (Условие завершения алгоритма выполнено?) is (Нет) not (Да)
stop
@enduml